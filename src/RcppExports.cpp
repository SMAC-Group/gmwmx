// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// acf_to_sigma
arma::mat acf_to_sigma(const arma::vec& acf);
RcppExport SEXP _gmwmx_acf_to_sigma(SEXP acfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type acf(acfSEXP);
    rcpp_result_gen = Rcpp::wrap(acf_to_sigma(acf));
    return rcpp_result_gen;
END_RCPP
}
// autocovariance_to_wv
NumericVector autocovariance_to_wv(const NumericVector acf, const NumericVector tau);
RcppExport SEXP _gmwmx_autocovariance_to_wv(SEXP acfSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector >::type acf(acfSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(autocovariance_to_wv(acf, tau));
    return rcpp_result_gen;
END_RCPP
}
// powerlaw_autocovariance
NumericVector powerlaw_autocovariance(const NumericVector theta, const int n);
RcppExport SEXP _gmwmx_powerlaw_autocovariance(SEXP thetaSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< const int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(powerlaw_autocovariance(theta, n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gmwmx_acf_to_sigma", (DL_FUNC) &_gmwmx_acf_to_sigma, 1},
    {"_gmwmx_autocovariance_to_wv", (DL_FUNC) &_gmwmx_autocovariance_to_wv, 2},
    {"_gmwmx_powerlaw_autocovariance", (DL_FUNC) &_gmwmx_powerlaw_autocovariance, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_gmwmx(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
